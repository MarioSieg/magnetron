# (c) 2025 Mario Sieg. <mario.sieg.64@gmail.com>

add_subdirectory(extern/googletest)

# Install boost with: sudo apt-get install libboost-all-dev
set(Boost_USE_STATIC_LIBS ON)
set(Boost_USE_MULTITHREADED ON)
set(Boost_USE_STATIC_RUNTIME OFF)
find_package(Boost COMPONENTS math)

file(GLOB_RECURSE TEST_SOURCES *.hpp *.cpp)
add_executable(magnetron_test ${TEST_SOURCES})
target_link_libraries(magnetron_test magnetron-static)
target_include_directories(magnetron_test PRIVATE ../../magnetron)
target_include_directories(magnetron_test PRIVATE extern/half/include)
if(Boost_FOUND)
    target_include_directories(magnetron_test PRIVATE ${Boost_INCLUDE_DIRS})
    target_link_libraries(magnetron_test ${Boost_LIBRARIES})
endif()
target_include_directories(magnetron_test PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
target_link_libraries(
    magnetron_test
    GTest::gtest_main
    GTest::gmock
)
add_test(NAME magnetron_test COMMAND magnetron_test)

if (${MAGNETRON_ENABLE_CUDA})
    target_compile_definitions(magnetron_test PRIVATE MAG_ENABLE_CUDA)
endif()

if (NOT WIN32)
    target_compile_options(magnetron_test PRIVATE -march=native)
endif()

if (CMAKE_BUILD_TYPE STREQUAL "Release" OR CMAKE_BUILD_TYPE STREQUAL "MinSizeRel" OR CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")     # Enable optimizations only for release builds
    if (NOT WIN32)
        target_compile_options(magnetron_test PRIVATE -flto)
        target_link_options(magnetron_test PRIVATE -flto)
    endif()
endif()
